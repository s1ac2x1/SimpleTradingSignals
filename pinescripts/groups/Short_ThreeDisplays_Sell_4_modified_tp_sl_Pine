// !!! Если убрать Long_ScreenOne_EMA_LastBarCrosses, то net profit и число сделок выше, без существенного снижения процента прибыльных сделок


//@version=5
strategy("Buy 4", overlay=true, initial_capital = 10000, default_qty_type = strategy.percent_of_equity, default_qty_value = 10, commission_type = strategy.commission.cash_per_contract, commission_value = 0.005)

quoteGreen(c, o) => c >= o

[weeklyOpen, weeklyClose]  = request.security(syminfo.tickerid, 'W', [open, close], lookahead=barmerge.lookahead_on)

Short_ScreenOne_LastBarRed = not quoteGreen(weeklyClose, weeklyOpen)

[currentWeekOpen, currentWeekHigh, currentWeekLow, currentWeekClose] = request.security(syminfo.tickerid, 'W', [open, high, low, close], lookahead=barmerge.lookahead_on)
[lastWeekOpen, lastWeekHigh, lastWeekLow, lastWeekClose] = request.security(syminfo.tickerid, 'W', [open[1], high[1], low[1], close[1]], lookahead=barmerge.lookahead_on)

Short_ScreenOne_LastBarLower = lastWeekLow > currentWeekLow and lastWeekHigh > currentWeekHigh

weeklyEMA26 = request.security(syminfo.tickerid, "W", ta.ema(close, 26), lookahead=barmerge.lookahead_on)
[weeklyLow, weeklyHigh] = request.security(syminfo.tickerid, 'W', [low, high], lookahead=barmerge.lookahead_on)

Short_ScreenOne_EMA_LastBarCrosses = weeklyLow <= weeklyEMA26 and weeklyHigh >= weeklyEMA26

[weeklyMACD, weeklySignal, weeklyHistogram] = request.security(syminfo.tickerid, "1W", ta.macd(close, 12, 26, 9), lookahead=barmerge.lookahead_on)

currH = weeklyHistogram
prevH = weeklyHistogram
if (prevH == currH)
    prevH := weeklyHistogram[1]
if (prevH == currH)
    prevH := weeklyHistogram[2]
if (prevH == currH)
    prevH := weeklyHistogram[2]
if (prevH == currH)
    prevH := weeklyHistogram[3]
if (prevH == currH)
    prevH := weeklyHistogram[4]

Short_ScreenOne_MACD_LastDescending = weeklyHistogram < prevH

dailyHigh = request.security(syminfo.tickerid, 'D', high)

Short_ScreenTwo_Bars_TwoHighDescending = dailyHigh < dailyHigh[1]

dailyEMA13 = request.security(syminfo.tickerid, "D", ta.ema(close, 13))
dailyLow = request.security(syminfo.tickerid, 'D', low)
dailyLastBarBelowEMA13 = dailyLow < dailyEMA13 and dailyHigh < dailyEMA13

Short_ScreenTwo_EMA_LastBarNotBelow = not dailyLastBarBelowEMA13

[dailyMACD, dailySignal, dailyHistogram] = request.security(syminfo.tickerid, "D", ta.macd(close, 12, 26, 9))

Short_ScreenTwo_MACD_LastDescending = dailyHistogram < dailyHistogram[1]

dailyStochK = ta.stoch(close, high, low, 14)
dailyStochD = ta.sma(dailyStochK, 3)

Short_ScreenTwo_Stoch_D_K_LastDescending = dailyStochK < dailyStochK[1] and dailyStochD < dailyStochD[1]
[middleKC, upperKC, lowerKC] = request.security(syminfo.tickerid, 'D', ta.kc(close, 20, 2), lookahead=barmerge.lookahead_on)

lateEntry = close <= middleKC - (middleKC- lowerKC) / 100 * 80

f_round(_val, _decimals) =>
    _p = math.pow(10, _decimals)
    math.round(math.abs(_val) * _p)/ _p * math.sign(_val)

currentWeeklyEMA26 = request.security(syminfo.tickerid, "W", ta.ema(close, 26), lookahead=barmerge.lookahead_on)
prevWeeklyEMA26 = request.security(syminfo.tickerid, "W", ta.ema(close, 26)[1], lookahead=barmerge.lookahead_on)

descendingEMA26 = f_round(prevWeeklyEMA26, 2) > f_round(currentWeeklyEMA26, 2)

lastWeeklyQuoteRed = not quoteGreen(weeklyClose, weeklyOpen)

Short_ScreenOne_SoftTrendCheck = descendingEMA26 and lastWeeklyQuoteRed

shortCondition = not lateEntry and Short_ScreenOne_LastBarRed and Short_ScreenOne_MACD_LastDescending and Short_ScreenTwo_Bars_TwoHighDescending and Short_ScreenTwo_Stoch_D_K_LastDescending

// plotchar(series = not lateEntry, title = 'not lateEntry')
// plotchar(series = Short_ScreenOne_LastBarRed, title = 'Short_ScreenOne_LastBarRed')
// plotchar(series = Short_ScreenOne_MACD_LastDescending, title = 'Short_ScreenOne_MACD_LastDescending')
// plotchar(series = Short_ScreenTwo_Bars_TwoHighDescending, title = 'Short_ScreenTwo_Bars_TwoHighDescending')
// plotchar(series = Short_ScreenTwo_Stoch_D_K_LastDescending, title = 'Short_ScreenTwo_Stoch_D_K_LastDescending')
// plotchar(series = allPassed, title = 'allPassed')
// plotchar(series = strategy.position_size == 0, title = 'strategy.position_size == 0')

arrayToFindMax = array.new_float(size=10, initial_value=0)
for offset = 0 to 10
    array.insert(arrayToFindMax, offset, dailyLow[offset])
max = array.max(id=arrayToFindMax)
fixedSL_short = ta.valuewhen(shortCondition, max, 0)

diff = middleKC - lowerKC
ratio = diff / 100 * 80
fixedTP_short = ta.valuewhen(shortCondition, low >= middleKC + (upperKC - middleKC) / 100 * 50 ? middleKC - (middleKC - lowerKC) / 100 * 30: middleKC - ratio, 0)

barIndexEntry = ta.valuewhen(shortCondition, bar_index, 0)

if (shortCondition)
    strategy.entry("short", strategy.short)

plotchar(strategy.position_size, title = 'strategy.position_size')
plotchar(fixedSL_short, title = 'fixedSL')
plotchar(fixedTP_short, title = 'fixedTP')

if (bar_index - barIndexEntry > 1)
    strategy.exit(id = "exit", from_entry = "short", stop = fixedSL_short, limit = fixedTP_short)
